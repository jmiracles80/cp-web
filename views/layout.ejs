<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <title>Cleverplacement | Marketing & Public Relations</title>
   

    <!-- Viewport mobile tag for sensible mobile support -->
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">

    
    <!--  
        Stylesheets and Preprocessors
        ==============================

        You can always bring in CSS files manually with `<link>` tags, or asynchronously
        using a solution like AMD (RequireJS).  Or, if you like, you can take advantage 
        of Sails' conventional asset pipeline (boilerplate Gruntfile).

        By default, stylesheets from your `assets/styles` folder are included
        here automatically (between STYLES and STYLES END). Both CSS (.css) and LESS (.less)
        are supported. In production, your styles will be minified and concatenated into
        a single file.
        
        To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:
            
            + Change the order of your CSS files
            + Import stylesheets from other directories
            + Use a different or additional preprocessor, like SASS, SCSS or Stylus
    -->

    <!--STYLES-->
    <link rel="stylesheet" href="/styles/angular-toastr.css">
    <link rel="stylesheet" href="/styles/bootstrap.min.css">
    <link rel="stylesheet" href="/styles/importer.css">
    <!--STYLES END-->

     <!--SCRIPTS-->
     <script src="/js/dependencies/sails.io.js"></script>
     <script src="/js/dependencies/angular.js"></script>
     <script src="/js/dependencies/angular-route.min.js"></script>
     <script src="/js/dependencies/angular-toastr.js"></script>
     <script src="/js/dependencies/compareTo.module.js"></script>
     <script src="/js/dependencies/jquery-1.11.2.min.js"></script>
     <script src="/js/dependencies/lodash.js"></script>
     <script src="/js/app.js"></script>
     <script src="/js/controllers/adminUsersPageController.js"></script>
     <script src="/js/controllers/editProfilePageController.js"></script>
     <script src="/js/controllers/homePageController.js"></script>
     <script src="/js/controllers/profilePageController.js"></script>
     <script src="/js/controllers/restorePageController.js"></script>
     <script src="/js/controllers/signupPageController.js"></script>
     <script src="/js/controllers/videosPageController.js"></script>
     <!--SCRIPTS END-->

<!--Added this so the client has access to the csrf tag and it's grabbed first service side on every page -->
    <script type="text/javascript">
    window.SAILS_LOCALS = { _csrf: "<%= _csrf %>" };
    </script>
     
  </head>

  <body style="zoom: 1;">
    
    <div id="page" class="page">
        
    <!-- HEADER -->
  <header id="header">
  
    <!-- Navbar -->
    <nav class="main-nav navbar-fixed-top headroom headroom--pinned">
      <div class="container">
                <!-- Brand and toggle -->
                <div class="navbar-header">
                    <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                    <span class="sr-only">Toggle navigation</span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    </button>
                    <img src="images/brand/clever-logo.png" class="brand-img img-responsive">
                </div>
                <!-- Navigation -->
                <div class="collapse navbar-collapse">
                    <ul class="nav navbar-nav navbar-right">
            <li class="active nav-item"><a href="/">Home</a></li>
            <li class="nav-item"><a href="#">About</a></li>
            <li class="nav-item dropdown">
              <a class="dropdown-toggle" data-toggle="dropdown" data-hover="dropdown" data-delay="0" data-close-others="false" href="#">Process <i class="fa fa-angle-down"></i></a>
              <ul class="dropdown-menu">
                <li><a href="#">Research</a></li>
                <li><a href="#">Analysis</a></li>
                <li><a href="#">Programming</a></li>
                <li><a href="#">Implementation</a></li>
                <li><a href="#">Tracking</a></li>
                <li><a href="#">Evaluation</a></li>
              </ul>                            
            </li><!--//dropdown-->                         
            <li class="nav-item"><a href="#">Contact</a></li>
            <li class="nav-item"><a href="#">Partners</a></li>
            <li class="nav-item dropdown">
              <a class="dropdown-toggle" data-toggle="dropdown" data-hover="dropdown" data-delay="0" data-close-others="false" href="#">My Account <i class="fa fa-angle-down"></i></a>
              <ul class="dropdown-menu">
                <li><a href="/signup">Sign Up</a></li>
                <li><a href="/login">Login</a></li>
                <li><a href="#">Support</a></li>
              </ul>                            
            </li><!--//dropdown--> 
          </ul><!--//nav-->
                </div>
                <!--// End Navigation -->
            </div>
            <!--// End Container -->
    </nav>
    <!--// End Navbar -->
    
    </header>


    <%- body %>



    <!--
        Client-side Templates
        ========================

        HTML templates are important prerequisites of modern, rich client applications.
        To work their magic, frameworks like Backbone, Angular, Ember, and Knockout require
        that you load these templates client-side.

        By default, your Gruntfile is configured to automatically load and precompile
        client-side JST templates in your `assets/templates` folder, then
        include them here automatically (between TEMPLATES and TEMPLATES END).
        
        To customize this behavior to fit your needs, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Import templates from other directories
            + Use a different template engine (handlebars, jade, dust, etc.)
            + Internationalize your client-side templates using a server-side
              stringfile before they're served.
    -->

    <!--TEMPLATES-->
    <script type="text/javascript" src="/jst.js"></script>
    <!--TEMPLATES END-->


    <!--

      Client-side Javascript
      ========================

      You can always bring in JS files manually with `script` tags, or asynchronously
      on the client using a solution like AMD (RequireJS).  Or, if you like, you can 
      take advantage of Sails' conventional asset pipeline (boilerplate Gruntfile).

      By default, files in your `assets/js` folder are included here
      automatically (between SCRIPTS and SCRIPTS END).  Both JavaScript (.js) and
      CoffeeScript (.coffee) are supported. In production, your scripts will be minified
      and concatenated into a single file.
      
      To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
      For example, here are a few things you could do:
          
          + Change the order of your scripts
          + Import scripts from other directories
          + Use a different preprocessor, like TypeScript

    -->
<!--// END Contact 3 --><!-- Start Footer Copyright Bar -->
  <div class="copyright-bar">
    <div class="container">
      <div class="editContent" style=""><p class="pull-left small">
  Â© <a href="http://www.cleverplacement.com" target="_blank">Cleverplacement</a> 2015
</p></div>
      <div class="editContent" style=""><p style="text-align: right;">
  Designed by 
  <a href="http://www.m2rdesign.com" target="_blank">M2R Design</a>
</p></div>
    </div>
  </div>
  <!--// END Footer Copyright Bar --></div><!-- /#page -->

   
  </div><!-- /.container -->
  </section><!-- /.content-block -->
  <!--// END Contact Form -->
  

</body></html>